var search_data = {"index":{"searchIndex":["blankslate","builder","illegalblockerror","xmlbase","xmlevents","xmlmarkup","fixnum","kernel","module","object","string","symbol","<<()","_blankslate_as_name()","_blankslate_as_name()","_end_tag()","_start_tag()","append_features()","blank_slate_method_added()","blank_slate_method_added()","blankslate_original_append_features()","cdata!()","check_for_name_collision()","comment!()","declare!()","find_hidden_method()","find_hidden_method()","hide()","instruct!()","method_added()","method_added()","method_missing()","new()","new()","nil?()","reveal()","tag!()","target!()","text!()","text!()","to_xs()","xchr()","changes","mit-license","readme","rakefile","builder-1.2.4","builder-2.0.0","builder-2.1.1"],"longSearchIndex":["blankslate","builder","builder::illegalblockerror","builder::xmlbase","builder::xmlevents","builder::xmlmarkup","fixnum","kernel","module","object","string","symbol","builder::xmlbase#<<()","string#_blankslate_as_name()","symbol#_blankslate_as_name()","builder::xmlevents#_end_tag()","builder::xmlevents#_start_tag()","module#append_features()","kernel::blank_slate_method_added()","object::blank_slate_method_added()","module#blankslate_original_append_features()","builder::xmlmarkup#cdata!()","builder::check_for_name_collision()","builder::xmlmarkup#comment!()","builder::xmlmarkup#declare!()","blankslate::find_hidden_method()","object::find_hidden_method()","blankslate::hide()","builder::xmlmarkup#instruct!()","kernel::method_added()","object::method_added()","builder::xmlbase#method_missing()","builder::xmlbase::new()","builder::xmlmarkup::new()","builder::xmlbase#nil?()","blankslate::reveal()","builder::xmlbase#tag!()","builder::xmlmarkup#target!()","builder::xmlbase#text!()","builder::xmlevents#text!()","string#to_xs()","fixnum#xchr()","","","","","","",""],"info":[["BlankSlate","","BlankSlate.html","","<p>BlankSlate provides an abstract base class with no predefined methods\n(except for <code>__send__</code> and <code>__id__</code> …\n"],["Builder","","Builder.html","","<p>If the Builder::XChar module is not currently defined, fail on any name\nclashes in standard library classes. …\n"],["Builder::IllegalBlockError","","Builder/IllegalBlockError.html","","<p>Generic error for builder\n"],["Builder::XmlBase","","Builder/XmlBase.html","","<p>XmlBase is a base class for building XML builders.  See Builder::XmlMarkup\nand Builder::XmlEvents for …\n"],["Builder::XmlEvents","","Builder/XmlEvents.html","","<p>Create a series of SAX-like XML events (e.g. start_tag, end_tag) from the\nmarkup code.  XmlEvent objects …\n"],["Builder::XmlMarkup","","Builder/XmlMarkup.html","","<p>Create XML markup easily.  All (well, almost all) methods sent to an\nXmlMarkup object will be translated …\n"],["Fixnum","","Fixnum.html","","<p>Enhance the Fixnum class with a XML escaped character conversion.\n"],["Kernel","","Kernel.html","","<p>Since Ruby is very dynamic, methods added to the ancestors of BlankSlate\n<em>after BlankSlate is defined</em> …\n"],["Module","","Module.html","","<p>Also, modules included into Object need to be scanned and have their\ninstance methods removed from blank …\n"],["Object","","Object.html","","<p>Same as above, except in Object.\n"],["String","","String.html","","<p>Enhance the String class with a XML escaped character version of to_s.\n\n<pre>Permission is granted for use, ...</pre>\n"],["Symbol","","Symbol.html","",""],["<<","Builder::XmlBase","Builder/XmlBase.html#method-i-3C-3C","(text)","<p>Append text to the output target without escaping any markup. May be used\nwithin the markup brackets …\n"],["_blankslate_as_name","String","String.html#method-i-_blankslate_as_name","()",""],["_blankslate_as_name","Symbol","Symbol.html#method-i-_blankslate_as_name","()",""],["_end_tag","Builder::XmlEvents","Builder/XmlEvents.html#method-i-_end_tag","(sym)",""],["_start_tag","Builder::XmlEvents","Builder/XmlEvents.html#method-i-_start_tag","(sym, attrs, end_too=false)",""],["append_features","Module","Module.html#method-i-append_features","(mod)",""],["blank_slate_method_added","Kernel","Kernel.html#method-c-blank_slate_method_added","(name)",""],["blank_slate_method_added","Object","Object.html#method-c-blank_slate_method_added","(name)",""],["blankslate_original_append_features","Module","Module.html#method-i-blankslate_original_append_features","(mod)",""],["cdata!","Builder::XmlMarkup","Builder/XmlMarkup.html#method-i-cdata-21","(text)","<p>Insert a CDATA section into the XML markup.\n<p>For example:\n\n<pre>xml.cdata!(&quot;text to be included in cdata&quot;)\n   ...</pre>\n"],["check_for_name_collision","Builder","Builder.html#method-c-check_for_name_collision","(klass, method_name, defined_constant=nil)",""],["comment!","Builder::XmlMarkup","Builder/XmlMarkup.html#method-i-comment-21","(comment_text)",""],["declare!","Builder::XmlMarkup","Builder/XmlMarkup.html#method-i-declare-21","(inst, *args, &block)","<p>Insert an XML declaration into the XML markup.\n<p>For example:\n\n<pre>xml.declare! :ELEMENT, :blah, &quot;yada&quot;\n    # ...</pre>\n"],["find_hidden_method","BlankSlate","BlankSlate.html#method-c-find_hidden_method","(name)",""],["find_hidden_method","Object","Object.html#method-c-find_hidden_method","(name)",""],["hide","BlankSlate","BlankSlate.html#method-c-hide","(name)","<p>Hide the method named <code>name</code> in the BlankSlate class.  Don’t\nhide <code>instance_eval</code> or any method beginning …\n"],["instruct!","Builder::XmlMarkup","Builder/XmlMarkup.html#method-i-instruct-21","(directive_tag=:xml, attrs={})","<p>Insert a processing instruction into the XML markup.  E.g.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">xml</span>.<span class=\"ruby-identifier\">instruct!</span>\n    <span class=\"ruby-comment\">#=&gt; &lt;?xml version=&quot;1.0&quot; ...</span>\n</pre>\n"],["method_added","Kernel","Kernel.html#method-c-method_added","(name)","<p>Detect method additions to Kernel and remove them in the BlankSlate class.\n"],["method_added","Object","Object.html#method-c-method_added","(name)","<p>Detect method additions to Object and remove them in the BlankSlate class.\n"],["method_missing","Builder::XmlBase","Builder/XmlBase.html#method-i-method_missing","(sym, *args, &block)","<p>Create XML markup based on the name of the method.  This method is never\ninvoked directly, but is called …\n"],["new","Builder::XmlBase","Builder/XmlBase.html#method-c-new","(indent=0, initial=0, encoding='utf-8')","<p>Create an XML markup builder.\n<p>out &mdash; Object receiving the markup.  <code>out</code> must respond to\n<code>&lt;&lt;</code>.\n<p>indent &mdash; Number …\n"],["new","Builder::XmlMarkup","Builder/XmlMarkup.html#method-c-new","(options={})","<p>Create an XML markup builder.  Parameters are specified by an option hash.\n<p>:target=&gt;target_object &mdash; "],["nil?","Builder::XmlBase","Builder/XmlBase.html#method-i-nil-3F","()","<p>For some reason, nil? is sent to the XmlMarkup object.  If nil? is not\ndefined and method_missing is …\n"],["reveal","BlankSlate","BlankSlate.html#method-c-reveal","(name)","<p>Redefine a previously hidden method so that it may be called on a blank\nslate object.\n"],["tag!","Builder::XmlBase","Builder/XmlBase.html#method-i-tag-21","(sym, *args, &block)","<p>Create a tag named <code>sym</code>.  Other than the first argument which\nis the tag name, the arguments are the same …\n"],["target!","Builder::XmlMarkup","Builder/XmlMarkup.html#method-i-target-21","()","<p>Return the target of the builder.\n"],["text!","Builder::XmlBase","Builder/XmlBase.html#method-i-text-21","(text)","<p>Append text to the output target.  Escape any markup.  May be used within\nthe markup brackets as:\n\n<pre>builder.p ...</pre>\n"],["text!","Builder::XmlEvents","Builder/XmlEvents.html#method-i-text-21","(text)",""],["to_xs","String","String.html#method-i-to_xs","(escape=true)","<p>XML escaped version of to_s. When <code>escape</code> is set to false the\nCP1252 fix is still applied but utf-8 characters …\n"],["xchr","Fixnum","Fixnum.html#method-i-xchr","(escape=true)","<p>XML escaped version of chr. When <code>escape</code> is set to false the\nCP1252 fix is still applied but utf-8 characters …\n"],["CHANGES","","CHANGES.html","","<p>Change Log\n<p>Version 3.1.0\n<p>Included the to_xs arity patch needed for weird Rails compatibility issue.\n"],["MIT-LICENSE","","MIT-LICENSE.html","","<p>Copyright © 2003-2012 Jim Weirich (jim.weirich@gmail.com)\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_rdoc.html","","<p>Project: Builder\n<p>Goal\n<p>Provide a simple way to create XML markup and data structures.\n"],["Rakefile","","Rakefile.html","","<p># Rakefile for rake        -*- ruby -*-\n<p># Copyright 2004, 2005, 2006 by Jim Weirich (jim@weirichhouse.org …\n"],["builder-1.2.4","","doc/releases/builder-1_2_4_rdoc.html","","<p>Builder 1.2.4 Released.\n<p>Added a “CDATA” method to the XML Markup builder (from Josh Knowles …\n"],["builder-2.0.0","","doc/releases/builder-2_0_0_rdoc.html","","<p>Builder 2.0.0 Released.\n<p>Changes in 2.0.0\n<p>UTF-8 characters in data are now correctly translated to their …\n"],["builder-2.1.1","","doc/releases/builder-2_1_1_rdoc.html","","<p>Builder 2.1.1 Released.\n<p>Release 2.1.1 of Builder is mainly a bug fix release.\n<p>Changes in 2.1.1\n"]]}}